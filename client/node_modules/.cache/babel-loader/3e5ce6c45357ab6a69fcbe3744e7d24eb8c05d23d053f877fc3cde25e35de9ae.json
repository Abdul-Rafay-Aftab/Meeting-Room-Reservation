{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useForm}from'react-hook-form';import{format,addDays,startOfDay}from'date-fns';import{toast}from'react-hot-toast';import{Calendar,Clock,MapPin,Users,CheckCircle,XCircle}from'lucide-react';import api from'../services/api';import LoadingSpinner from'../components/LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RoomBooking=()=>{const[rooms,setRooms]=useState([]);const[selectedDate,setSelectedDate]=useState(format(new Date(),'yyyy-MM-dd'));const[selectedRoom,setSelectedRoom]=useState(null);const[roomAvailability,setRoomAvailability]=useState([]);const[loading,setLoading]=useState(true);const[submitting,setSubmitting]=useState(false);const{register,handleSubmit,formState:{errors},watch,setValue}=useForm();const watchStartTime=watch('startTime');const watchEndTime=watch('endTime');useEffect(()=>{fetchRooms();},[]);useEffect(()=>{if(selectedDate){fetchRoomAvailability();}},[selectedDate]);const fetchRooms=async()=>{try{const response=await api.get('/api/rooms?active=true');setRooms(response.data.rooms);}catch(error){console.error('Error fetching rooms:',error);toast.error('Failed to load rooms');}finally{setLoading(false);}};const fetchRoomAvailability=async()=>{try{const response=await api.get(`/api/rooms/availability/all?date=${selectedDate}`);console.log('Fetched availability data:',response.data);setRoomAvailability(response.data.rooms);}catch(error){console.error('Error fetching room availability:',error);}};const checkAvailability=async(roomId,startTime,endTime)=>{try{const response=await api.post(`/api/rooms/${roomId}/check-availability`,{startTime,endTime});return response.data.isAvailable;}catch(error){console.error('Error checking availability:',error);return false;}};const onSubmit=async data=>{if(!selectedRoom){toast.error('Please select a room');return;}setSubmitting(true);try{const startDateTime=`${selectedDate}T${data.startTime}`;const endDateTime=`${selectedDate}T${data.endTime}`;// Check availability one more time before booking\nconst isAvailable=await checkAvailability(selectedRoom.id,startDateTime,endDateTime);if(!isAvailable){toast.error('Room is no longer available for the selected time');return;}const reservationData={roomId:selectedRoom.id,startTime:startDateTime,endTime:endDateTime,purpose:data.purpose,department:data.department};await api.post('/api/reservations',reservationData);toast.success('Room booked successfully!');// Reset form\nsetValue('startTime','');setValue('endTime','');setValue('purpose','');setValue('department','');setSelectedRoom(null);// Immediately update local state to show the new reservation\nconst newReservation={id:Date.now(),// Temporary ID for immediate UI update\nroom_id:selectedRoom.id,start_time:startDateTime,end_time:endDateTime,title:data.purpose,description:data.department,user_name:'You',status:'confirmed'};setRoomAvailability(prev=>prev.map(room=>{if(room.id===selectedRoom.id){return{...room,reservations:[...(room.reservations||[]),newReservation]};}return room;}));// Also refresh from server to ensure consistency\nsetTimeout(()=>{fetchRoomAvailability();},500);}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to book room';toast.error(message);}finally{setSubmitting(false);}};const isTimeSlotAvailable=(roomId,startTime,endTime)=>{const room=roomAvailability.find(r=>r.id===roomId);if(!room||!room.reservations)return true;const requestedStart=new Date(`${selectedDate}T${startTime}`);const requestedEnd=new Date(`${selectedDate}T${endTime}`);// Debug logging\nconsole.log('Checking availability for:',{roomId,startTime,endTime,selectedDate});console.log('Room reservations:',room===null||room===void 0?void 0:room.reservations);const hasConflict=room.reservations.some(reservation=>{// Handle different time formats from server\nlet reservationStart,reservationEnd;try{// Try to parse the time from the server response\nif(typeof reservation.start_time==='string'){reservationStart=new Date(reservation.start_time);}else{reservationStart=new Date(reservation.start_time);}if(typeof reservation.end_time==='string'){reservationEnd=new Date(reservation.end_time);}else{reservationEnd=new Date(reservation.end_time);}// Check if dates are valid\nif(isNaN(reservationStart.getTime())||isNaN(reservationEnd.getTime())){console.warn('Invalid reservation time format:',reservation);return false;}}catch(error){console.error('Error parsing reservation time:',error,reservation);return false;}const conflict=requestedStart<reservationEnd&&requestedEnd>reservationStart;if(conflict){console.log('Conflict found:',{reservation,requestedStart,requestedEnd,reservationStart,reservationEnd,requestedStartISO:requestedStart.toISOString(),requestedEndISO:requestedEnd.toISOString(),reservationStartISO:reservationStart.toISOString(),reservationEndISO:reservationEnd.toISOString()});}return conflict;});return!hasConflict;};const getAvailableTimeSlots=()=>{const slots=[];for(let hour=9;hour<=16;hour++){for(let minute=0;minute<60;minute+=30){const time=`${hour.toString().padStart(2,'0')}:${minute.toString().padStart(2,'0')}`;slots.push(time);}}return slots;};if(loading){return/*#__PURE__*/_jsx(LoadingSpinner,{className:\"h-64\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Book a Meeting Room\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:\"Select a room, date, and time for your meeting.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Select a Room\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Date\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:selectedDate,onChange:e=>setSelectedDate(e.target.value),min:format(new Date(),'yyyy-MM-dd'),className:\"input flex-1\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:fetchRoomAvailability,className:\"btn btn-secondary px-3\",title:\"Refresh availability\",children:\"\\uD83D\\uDD04\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:rooms.map(room=>{var _roomData$reservation;const isSelected=(selectedRoom===null||selectedRoom===void 0?void 0:selectedRoom.id)===room.id;const roomData=roomAvailability.find(r=>r.id===room.id);const hasReservations=(roomData===null||roomData===void 0?void 0:(_roomData$reservation=roomData.reservations)===null||_roomData$reservation===void 0?void 0:_roomData$reservation.length)>0;return/*#__PURE__*/_jsx(\"div\",{className:`border rounded-lg p-4 cursor-pointer transition-colors ${isSelected?'border-primary-500 bg-primary-50':'border-gray-200 hover:border-gray-300'}`,onClick:()=>setSelectedRoom(room),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900\",children:room.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500 mt-1\",children:[/*#__PURE__*/_jsx(MapPin,{className:\"h-4 w-4 mr-1\"}),room.location]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500 mt-1\",children:[/*#__PURE__*/_jsx(Users,{className:\"h-4 w-4 mr-1\"}),\"Capacity: \",room.capacity,\" people\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[room.available_from,\" - \",room.available_to]}),hasReservations&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-orange-600 mt-1\",children:[roomData.reservations.length,\" booking(s) today\"]})]})]})},room.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Booking Details\"}),selectedRoom?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Start Time\"}),/*#__PURE__*/_jsxs(\"select\",{...register('startTime',{required:'Start time is required'}),className:`input ${errors.startTime?'border-red-500':''}`,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select start time\"}),getAvailableTimeSlots().map(time=>/*#__PURE__*/_jsx(\"option\",{value:time,children:time},time))]}),errors.startTime&&/*#__PURE__*/_jsx(\"p\",{className:\"form-error\",children:errors.startTime.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"End Time\"}),/*#__PURE__*/_jsxs(\"select\",{...register('endTime',{required:'End time is required'}),className:`input ${errors.endTime?'border-red-500':''}`,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select end time\"}),getAvailableTimeSlots().map(time=>{if(watchStartTime&&time<=watchStartTime)return null;return/*#__PURE__*/_jsx(\"option\",{value:time,children:time},time);})]}),errors.endTime&&/*#__PURE__*/_jsx(\"p\",{className:\"form-error\",children:errors.endTime.message})]}),watchStartTime&&watchEndTime&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-gray-50 rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center text-sm\",children:isTimeSlotAvailable(selectedRoom.id,watchStartTime,watchEndTime)?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-4 w-4 text-green-600 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-green-600\",children:\"Time slot is available\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(XCircle,{className:\"h-4 w-4 text-red-600 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-red-600\",children:\"Time slot is not available\"})]})})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Purpose\"}),/*#__PURE__*/_jsx(\"textarea\",{...register('purpose',{required:'Purpose is required'}),rows:3,className:`input ${errors.purpose?'border-red-500':''}`,placeholder:\"Describe the purpose of your meeting\"}),errors.purpose&&/*#__PURE__*/_jsx(\"p\",{className:\"form-error\",children:errors.purpose.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Department (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",...register('department'),className:\"input\",placeholder:\"Your department\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:submitting||!watchStartTime||!watchEndTime||!isTimeSlotAvailable(selectedRoom.id,watchStartTime,watchEndTime),className:\"w-full btn btn-primary disabled:opacity-50 disabled:cursor-not-allowed\",children:submitting?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"}),\"Booking...\"]}):'Book Room'})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"mx-auto h-12 w-12 text-gray-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"mt-2 text-sm font-medium text-gray-900\",children:\"No room selected\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:\"Please select a room from the list to proceed with booking.\"})]})]})]}),selectedDate&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:[\"Room Availability for \",format(new Date(selectedDate),'MMMM dd, yyyy')]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",children:roomAvailability.map(room=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900\",children:room.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:room.location}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:room.reservations&&room.reservations.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:room.reservations.map((reservation,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs bg-gray-100 p-2 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:reservation.user_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-600\",children:[format(new Date(reservation.start_time),'HH:mm'),\" - \",format(new Date(reservation.end_time),'HH:mm')]})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 bg-green-50 p-2 rounded\",children:\"No bookings today\"})})]},room.id))})]})]});};export default RoomBooking;","map":{"version":3,"names":["React","useState","useEffect","useForm","format","addDays","startOfDay","toast","Calendar","Clock","MapPin","Users","CheckCircle","XCircle","api","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RoomBooking","rooms","setRooms","selectedDate","setSelectedDate","Date","selectedRoom","setSelectedRoom","roomAvailability","setRoomAvailability","loading","setLoading","submitting","setSubmitting","register","handleSubmit","formState","errors","watch","setValue","watchStartTime","watchEndTime","fetchRooms","fetchRoomAvailability","response","get","data","error","console","log","checkAvailability","roomId","startTime","endTime","post","isAvailable","onSubmit","startDateTime","endDateTime","id","reservationData","purpose","department","success","newReservation","now","room_id","start_time","end_time","title","description","user_name","status","prev","map","room","reservations","setTimeout","_error$response","_error$response$data","message","isTimeSlotAvailable","find","r","requestedStart","requestedEnd","hasConflict","some","reservation","reservationStart","reservationEnd","isNaN","getTime","warn","conflict","requestedStartISO","toISOString","requestedEndISO","reservationStartISO","reservationEndISO","getAvailableTimeSlots","slots","hour","minute","time","toString","padStart","push","className","children","type","value","onChange","e","target","min","onClick","_roomData$reservation","isSelected","roomData","hasReservations","length","name","location","capacity","available_from","available_to","required","rows","placeholder","disabled","index"],"sources":["E:/Meeting/client/src/pages/RoomBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format, addDays, startOfDay } from 'date-fns';\r\nimport { toast } from 'react-hot-toast';\r\nimport { Calendar, Clock, MapPin, Users, CheckCircle, XCircle } from 'lucide-react';\r\nimport api from '../services/api';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nconst RoomBooking = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(format(new Date(), 'yyyy-MM-dd'));\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n  const [roomAvailability, setRoomAvailability] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const watchStartTime = watch('startTime');\r\n  const watchEndTime = watch('endTime');\r\n\r\n  useEffect(() => {\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedDate) {\r\n      fetchRoomAvailability();\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const fetchRooms = async () => {\r\n    try {\r\n      const response = await api.get('/api/rooms?active=true');\r\n      setRooms(response.data.rooms);\r\n    } catch (error) {\r\n      console.error('Error fetching rooms:', error);\r\n      toast.error('Failed to load rooms');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchRoomAvailability = async () => {\r\n    try {\r\n      const response = await api.get(`/api/rooms/availability/all?date=${selectedDate}`);\r\n      console.log('Fetched availability data:', response.data);\r\n      setRoomAvailability(response.data.rooms);\r\n    } catch (error) {\r\n      console.error('Error fetching room availability:', error);\r\n    }\r\n  };\r\n\r\n  const checkAvailability = async (roomId, startTime, endTime) => {\r\n    try {\r\n      const response = await api.post(`/api/rooms/${roomId}/check-availability`, {\r\n        startTime,\r\n        endTime,\r\n      });\r\n      return response.data.isAvailable;\r\n    } catch (error) {\r\n      console.error('Error checking availability:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (!selectedRoom) {\r\n      toast.error('Please select a room');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const startDateTime = `${selectedDate}T${data.startTime}`;\r\n      const endDateTime = `${selectedDate}T${data.endTime}`;\r\n\r\n      // Check availability one more time before booking\r\n      const isAvailable = await checkAvailability(selectedRoom.id, startDateTime, endDateTime);\r\n      if (!isAvailable) {\r\n        toast.error('Room is no longer available for the selected time');\r\n        return;\r\n      }\r\n\r\n      const reservationData = {\r\n        roomId: selectedRoom.id,\r\n        startTime: startDateTime,\r\n        endTime: endDateTime,\r\n        purpose: data.purpose,\r\n        department: data.department,\r\n      };\r\n\r\n      await api.post('/api/reservations', reservationData);\r\n      toast.success('Room booked successfully!');\r\n      \r\n      // Reset form\r\n      setValue('startTime', '');\r\n      setValue('endTime', '');\r\n      setValue('purpose', '');\r\n      setValue('department', '');\r\n      setSelectedRoom(null);\r\n      \r\n      // Immediately update local state to show the new reservation\r\n      const newReservation = {\r\n        id: Date.now(), // Temporary ID for immediate UI update\r\n        room_id: selectedRoom.id,\r\n        start_time: startDateTime,\r\n        end_time: endDateTime,\r\n        title: data.purpose,\r\n        description: data.department,\r\n        user_name: 'You',\r\n        status: 'confirmed'\r\n      };\r\n      \r\n      setRoomAvailability(prev => prev.map(room => {\r\n        if (room.id === selectedRoom.id) {\r\n          return {\r\n            ...room,\r\n            reservations: [...(room.reservations || []), newReservation]\r\n          };\r\n        }\r\n        return room;\r\n      }));\r\n      \r\n      // Also refresh from server to ensure consistency\r\n      setTimeout(() => {\r\n        fetchRoomAvailability();\r\n      }, 500);\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to book room';\r\n      toast.error(message);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const isTimeSlotAvailable = (roomId, startTime, endTime) => {\r\n    const room = roomAvailability.find(r => r.id === roomId);\r\n    if (!room || !room.reservations) return true;\r\n\r\n    const requestedStart = new Date(`${selectedDate}T${startTime}`);\r\n    const requestedEnd = new Date(`${selectedDate}T${endTime}`);\r\n\r\n    // Debug logging\r\n    console.log('Checking availability for:', { roomId, startTime, endTime, selectedDate });\r\n    console.log('Room reservations:', room?.reservations);\r\n\r\n    const hasConflict = room.reservations.some(reservation => {\r\n      // Handle different time formats from server\r\n      let reservationStart, reservationEnd;\r\n      \r\n      try {\r\n        // Try to parse the time from the server response\r\n        if (typeof reservation.start_time === 'string') {\r\n          reservationStart = new Date(reservation.start_time);\r\n        } else {\r\n          reservationStart = new Date(reservation.start_time);\r\n        }\r\n        \r\n        if (typeof reservation.end_time === 'string') {\r\n          reservationEnd = new Date(reservation.end_time);\r\n        } else {\r\n          reservationEnd = new Date(reservation.end_time);\r\n        }\r\n        \r\n        // Check if dates are valid\r\n        if (isNaN(reservationStart.getTime()) || isNaN(reservationEnd.getTime())) {\r\n          console.warn('Invalid reservation time format:', reservation);\r\n          return false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing reservation time:', error, reservation);\r\n        return false;\r\n      }\r\n      \r\n      const conflict = (requestedStart < reservationEnd && requestedEnd > reservationStart);\r\n      if (conflict) {\r\n        console.log('Conflict found:', { \r\n          reservation, \r\n          requestedStart, \r\n          requestedEnd, \r\n          reservationStart, \r\n          reservationEnd,\r\n          requestedStartISO: requestedStart.toISOString(),\r\n          requestedEndISO: requestedEnd.toISOString(),\r\n          reservationStartISO: reservationStart.toISOString(),\r\n          reservationEndISO: reservationEnd.toISOString()\r\n        });\r\n      }\r\n      return conflict;\r\n    });\r\n\r\n    return !hasConflict;\r\n  };\r\n\r\n  const getAvailableTimeSlots = () => {\r\n    const slots = [];\r\n    for (let hour = 9; hour <= 16; hour++) {\r\n      for (let minute = 0; minute < 60; minute += 30) {\r\n        const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        slots.push(time);\r\n      }\r\n    }\r\n    return slots;\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner className=\"h-64\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Book a Meeting Room</h1>\r\n        <p className=\"mt-1 text-sm text-gray-500\">\r\n          Select a room, date, and time for your meeting.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Room Selection */}\r\n        <div className=\"card\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Select a Room</h2>\r\n          \r\n          {/* Date Selection */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"form-label\">Date</label>\r\n            <div className=\"flex gap-2\">\r\n              <input\r\n                type=\"date\"\r\n                value={selectedDate}\r\n                onChange={(e) => setSelectedDate(e.target.value)}\r\n                min={format(new Date(), 'yyyy-MM-dd')}\r\n                className=\"input flex-1\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={fetchRoomAvailability}\r\n                className=\"btn btn-secondary px-3\"\r\n                title=\"Refresh availability\"\r\n              >\r\n                🔄\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            {rooms.map((room) => {\r\n              const isSelected = selectedRoom?.id === room.id;\r\n              const roomData = roomAvailability.find(r => r.id === room.id);\r\n              const hasReservations = roomData?.reservations?.length > 0;\r\n\r\n              return (\r\n                <div\r\n                  key={room.id}\r\n                  className={`border rounded-lg p-4 cursor-pointer transition-colors ${\r\n                    isSelected\r\n                      ? 'border-primary-500 bg-primary-50'\r\n                      : 'border-gray-200 hover:border-gray-300'\r\n                  }`}\r\n                  onClick={() => setSelectedRoom(room)}\r\n                >\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <h3 className=\"font-medium text-gray-900\">{room.name}</h3>\r\n                      <div className=\"flex items-center text-sm text-gray-500 mt-1\">\r\n                        <MapPin className=\"h-4 w-4 mr-1\" />\r\n                        {room.location}\r\n                      </div>\r\n                      <div className=\"flex items-center text-sm text-gray-500 mt-1\">\r\n                        <Users className=\"h-4 w-4 mr-1\" />\r\n                        Capacity: {room.capacity} people\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        {room.available_from} - {room.available_to}\r\n                      </div>\r\n                      {hasReservations && (\r\n                        <div className=\"text-xs text-orange-600 mt-1\">\r\n                          {roomData.reservations.length} booking(s) today\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Booking Form */}\r\n        <div className=\"card\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Booking Details</h2>\r\n          \r\n          {selectedRoom ? (\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"form-label\">Start Time</label>\r\n                <select\r\n                  {...register('startTime', { required: 'Start time is required' })}\r\n                  className={`input ${errors.startTime ? 'border-red-500' : ''}`}\r\n                >\r\n                  <option value=\"\">Select start time</option>\r\n                  {getAvailableTimeSlots().map((time) => (\r\n                    <option key={time} value={time}>\r\n                      {time}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {errors.startTime && (\r\n                  <p className=\"form-error\">{errors.startTime.message}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"form-label\">End Time</label>\r\n                <select\r\n                  {...register('endTime', { required: 'End time is required' })}\r\n                  className={`input ${errors.endTime ? 'border-red-500' : ''}`}\r\n                >\r\n                  <option value=\"\">Select end time</option>\r\n                  {getAvailableTimeSlots().map((time) => {\r\n                    if (watchStartTime && time <= watchStartTime) return null;\r\n                    return (\r\n                      <option key={time} value={time}>\r\n                        {time}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n                {errors.endTime && (\r\n                  <p className=\"form-error\">{errors.endTime.message}</p>\r\n                )}\r\n              </div>\r\n\r\n              {watchStartTime && watchEndTime && (\r\n                <div className=\"p-3 bg-gray-50 rounded-lg\">\r\n                  <div className=\"flex items-center text-sm\">\r\n                    {isTimeSlotAvailable(selectedRoom.id, watchStartTime, watchEndTime) ? (\r\n                      <>\r\n                        <CheckCircle className=\"h-4 w-4 text-green-600 mr-2\" />\r\n                        <span className=\"text-green-600\">Time slot is available</span>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <XCircle className=\"h-4 w-4 text-red-600 mr-2\" />\r\n                        <span className=\"text-red-600\">Time slot is not available</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div>\r\n                <label className=\"form-label\">Purpose</label>\r\n                <textarea\r\n                  {...register('purpose', { required: 'Purpose is required' })}\r\n                  rows={3}\r\n                  className={`input ${errors.purpose ? 'border-red-500' : ''}`}\r\n                  placeholder=\"Describe the purpose of your meeting\"\r\n                />\r\n                {errors.purpose && (\r\n                  <p className=\"form-error\">{errors.purpose.message}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"form-label\">Department (Optional)</label>\r\n                <input\r\n                  type=\"text\"\r\n                  {...register('department')}\r\n                  className=\"input\"\r\n                  placeholder=\"Your department\"\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                disabled={submitting || !watchStartTime || !watchEndTime || !isTimeSlotAvailable(selectedRoom.id, watchStartTime, watchEndTime)}\r\n                className=\"w-full btn btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {submitting ? (\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                    Booking...\r\n                  </div>\r\n                ) : (\r\n                  'Book Room'\r\n                )}\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"text-center py-8\">\r\n              <Calendar className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No room selected</h3>\r\n              <p className=\"mt-1 text-sm text-gray-500\">\r\n                Please select a room from the list to proceed with booking.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Room Availability Overview */}\r\n      {selectedDate && (\r\n        <div className=\"card\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n            Room Availability for {format(new Date(selectedDate), 'MMMM dd, yyyy')}\r\n          </h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {roomAvailability.map((room) => (\r\n              <div key={room.id} className=\"border rounded-lg p-4\">\r\n                <h3 className=\"font-medium text-gray-900\">{room.name}</h3>\r\n                <p className=\"text-sm text-gray-500\">{room.location}</p>\r\n                <div className=\"mt-2\">\r\n                  {room.reservations && room.reservations.length > 0 ? (\r\n                    <div className=\"space-y-1\">\r\n                      {room.reservations.map((reservation, index) => (\r\n                        <div key={index} className=\"text-xs bg-gray-100 p-2 rounded\">\r\n                          <div className=\"font-medium\">{reservation.user_name}</div>\r\n                          <div className=\"text-gray-600\">\r\n                            {format(new Date(reservation.start_time), 'HH:mm')} - {format(new Date(reservation.end_time), 'HH:mm')}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-xs text-green-600 bg-green-50 p-2 rounded\">\r\n                      No bookings today\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomBooking; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}